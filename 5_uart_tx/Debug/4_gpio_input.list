
4_gpio_input.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b4  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800034c  08000354  00001354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800034c  0800034c  00001354  2**0
                  CONTENTS
  4 .ARM          00000000  0800034c  0800034c  00001354  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800034c  08000354  00001354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800034c  0800034c  0000134c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000350  08000350  00001350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000354  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000354  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001354  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000364  00000000  00000000  00001384  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000102  00000000  00000000  000016e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  000017f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000002d  00000000  00000000  00001838  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dc78  00000000  00000000  00001865  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000057f  00000000  00000000  0000f4dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fddc  00000000  00000000  0000fa5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0005f838  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  0005f87c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000054  00000000  00000000  0005f8d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000334 	.word	0x08000334

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000334 	.word	0x08000334

080001d8 <main>:
#define LED_PIN			(PIN5)
#define BTN_PIN			(PIN13)


int main(void)
{
 80001d8:	b480      	push	{r7}
 80001da:	b085      	sub	sp, #20
 80001dc:	af00      	add	r7, sp, #0

	//ENABLE CLOXK ACCESS TO GPIOA AND GPIOC
	RCC->AHB1ENR |= GPIOAEN;
 80001de:	4b2a      	ldr	r3, [pc, #168]	@ (8000288 <main+0xb0>)
 80001e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001e2:	4a29      	ldr	r2, [pc, #164]	@ (8000288 <main+0xb0>)
 80001e4:	f043 0301 	orr.w	r3, r3, #1
 80001e8:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= GPIOCEN;
 80001ea:	4b27      	ldr	r3, [pc, #156]	@ (8000288 <main+0xb0>)
 80001ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001ee:	4a26      	ldr	r2, [pc, #152]	@ (8000288 <main+0xb0>)
 80001f0:	f043 0304 	orr.w	r3, r3, #4
 80001f4:	6313      	str	r3, [r2, #48]	@ 0x30

	//SET PA5 AS OUTPUT PIN
	GPIOA->MODER |=(1U<<10);
 80001f6:	4b25      	ldr	r3, [pc, #148]	@ (800028c <main+0xb4>)
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	4a24      	ldr	r2, [pc, #144]	@ (800028c <main+0xb4>)
 80001fc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000200:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<11);
 8000202:	4b22      	ldr	r3, [pc, #136]	@ (800028c <main+0xb4>)
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	4a21      	ldr	r2, [pc, #132]	@ (800028c <main+0xb4>)
 8000208:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800020c:	6013      	str	r3, [r2, #0]

	//SET PC13 AS INPUT PIN
	GPIOC->MODER &=~(1U<<26);
 800020e:	4b20      	ldr	r3, [pc, #128]	@ (8000290 <main+0xb8>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	4a1f      	ldr	r2, [pc, #124]	@ (8000290 <main+0xb8>)
 8000214:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8000218:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~(1U<<27);
 800021a:	4b1d      	ldr	r3, [pc, #116]	@ (8000290 <main+0xb8>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	4a1c      	ldr	r2, [pc, #112]	@ (8000290 <main+0xb8>)
 8000220:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 8000224:	6013      	str	r3, [r2, #0]
	while(1)
	{
		//CHECK IF BTN IS PRESSED
		if (GPIOC->IDR & BTN_PIN)
 8000226:	4b1a      	ldr	r3, [pc, #104]	@ (8000290 <main+0xb8>)
 8000228:	691b      	ldr	r3, [r3, #16]
 800022a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800022e:	2b00      	cmp	r3, #0
 8000230:	d01b      	beq.n	800026a <main+0x92>
		{
			GPIOA->BSRR = LED_PIN;
 8000232:	4b16      	ldr	r3, [pc, #88]	@ (800028c <main+0xb4>)
 8000234:	2220      	movs	r2, #32
 8000236:	619a      	str	r2, [r3, #24]
			for (int i=0; i<1000000;i++){}
 8000238:	2300      	movs	r3, #0
 800023a:	60fb      	str	r3, [r7, #12]
 800023c:	e002      	b.n	8000244 <main+0x6c>
 800023e:	68fb      	ldr	r3, [r7, #12]
 8000240:	3301      	adds	r3, #1
 8000242:	60fb      	str	r3, [r7, #12]
 8000244:	68fb      	ldr	r3, [r7, #12]
 8000246:	4a13      	ldr	r2, [pc, #76]	@ (8000294 <main+0xbc>)
 8000248:	4293      	cmp	r3, r2
 800024a:	ddf8      	ble.n	800023e <main+0x66>
			GPIOA->BSRR = (1U<<21);
 800024c:	4b0f      	ldr	r3, [pc, #60]	@ (800028c <main+0xb4>)
 800024e:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8000252:	619a      	str	r2, [r3, #24]
			for (int i=0; i<1000000;i++){}
 8000254:	2300      	movs	r3, #0
 8000256:	60bb      	str	r3, [r7, #8]
 8000258:	e002      	b.n	8000260 <main+0x88>
 800025a:	68bb      	ldr	r3, [r7, #8]
 800025c:	3301      	adds	r3, #1
 800025e:	60bb      	str	r3, [r7, #8]
 8000260:	68bb      	ldr	r3, [r7, #8]
 8000262:	4a0c      	ldr	r2, [pc, #48]	@ (8000294 <main+0xbc>)
 8000264:	4293      	cmp	r3, r2
 8000266:	ddf8      	ble.n	800025a <main+0x82>
 8000268:	e7dd      	b.n	8000226 <main+0x4e>
		}
		else{
			GPIOA->BSRR = (1U<<21);
 800026a:	4b08      	ldr	r3, [pc, #32]	@ (800028c <main+0xb4>)
 800026c:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8000270:	619a      	str	r2, [r3, #24]
			for (int i=0; i<1000000;i++){}
 8000272:	2300      	movs	r3, #0
 8000274:	607b      	str	r3, [r7, #4]
 8000276:	e002      	b.n	800027e <main+0xa6>
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	3301      	adds	r3, #1
 800027c:	607b      	str	r3, [r7, #4]
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a04      	ldr	r2, [pc, #16]	@ (8000294 <main+0xbc>)
 8000282:	4293      	cmp	r3, r2
 8000284:	ddf8      	ble.n	8000278 <main+0xa0>
		if (GPIOC->IDR & BTN_PIN)
 8000286:	e7ce      	b.n	8000226 <main+0x4e>
 8000288:	40023800 	.word	0x40023800
 800028c:	40020000 	.word	0x40020000
 8000290:	40020800 	.word	0x40020800
 8000294:	000f423f 	.word	0x000f423f

08000298 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000298:	480d      	ldr	r0, [pc, #52]	@ (80002d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800029a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800029c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a0:	480c      	ldr	r0, [pc, #48]	@ (80002d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002a2:	490d      	ldr	r1, [pc, #52]	@ (80002d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a4:	4a0d      	ldr	r2, [pc, #52]	@ (80002dc <LoopForever+0xe>)
  movs r3, #0
 80002a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a8:	e002      	b.n	80002b0 <LoopCopyDataInit>

080002aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ae:	3304      	adds	r3, #4

080002b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b4:	d3f9      	bcc.n	80002aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b6:	4a0a      	ldr	r2, [pc, #40]	@ (80002e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b8:	4c0a      	ldr	r4, [pc, #40]	@ (80002e4 <LoopForever+0x16>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002bc:	e001      	b.n	80002c2 <LoopFillZerobss>

080002be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c0:	3204      	adds	r2, #4

080002c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c4:	d3fb      	bcc.n	80002be <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c6:	f000 f811 	bl	80002ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ca:	f7ff ff85 	bl	80001d8 <main>

080002ce <LoopForever>:

LoopForever:
  b LoopForever
 80002ce:	e7fe      	b.n	80002ce <LoopForever>
  ldr   r0, =_estack
 80002d0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002dc:	08000354 	.word	0x08000354
  ldr r2, =_sbss
 80002e0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e4:	2000001c 	.word	0x2000001c

080002e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e8:	e7fe      	b.n	80002e8 <ADC_IRQHandler>
	...

080002ec <__libc_init_array>:
 80002ec:	b570      	push	{r4, r5, r6, lr}
 80002ee:	4d0d      	ldr	r5, [pc, #52]	@ (8000324 <__libc_init_array+0x38>)
 80002f0:	4c0d      	ldr	r4, [pc, #52]	@ (8000328 <__libc_init_array+0x3c>)
 80002f2:	1b64      	subs	r4, r4, r5
 80002f4:	10a4      	asrs	r4, r4, #2
 80002f6:	2600      	movs	r6, #0
 80002f8:	42a6      	cmp	r6, r4
 80002fa:	d109      	bne.n	8000310 <__libc_init_array+0x24>
 80002fc:	4d0b      	ldr	r5, [pc, #44]	@ (800032c <__libc_init_array+0x40>)
 80002fe:	4c0c      	ldr	r4, [pc, #48]	@ (8000330 <__libc_init_array+0x44>)
 8000300:	f000 f818 	bl	8000334 <_init>
 8000304:	1b64      	subs	r4, r4, r5
 8000306:	10a4      	asrs	r4, r4, #2
 8000308:	2600      	movs	r6, #0
 800030a:	42a6      	cmp	r6, r4
 800030c:	d105      	bne.n	800031a <__libc_init_array+0x2e>
 800030e:	bd70      	pop	{r4, r5, r6, pc}
 8000310:	f855 3b04 	ldr.w	r3, [r5], #4
 8000314:	4798      	blx	r3
 8000316:	3601      	adds	r6, #1
 8000318:	e7ee      	b.n	80002f8 <__libc_init_array+0xc>
 800031a:	f855 3b04 	ldr.w	r3, [r5], #4
 800031e:	4798      	blx	r3
 8000320:	3601      	adds	r6, #1
 8000322:	e7f2      	b.n	800030a <__libc_init_array+0x1e>
 8000324:	0800034c 	.word	0x0800034c
 8000328:	0800034c 	.word	0x0800034c
 800032c:	0800034c 	.word	0x0800034c
 8000330:	08000350 	.word	0x08000350

08000334 <_init>:
 8000334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000336:	bf00      	nop
 8000338:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800033a:	bc08      	pop	{r3}
 800033c:	469e      	mov	lr, r3
 800033e:	4770      	bx	lr

08000340 <_fini>:
 8000340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000342:	bf00      	nop
 8000344:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000346:	bc08      	pop	{r3}
 8000348:	469e      	mov	lr, r3
 800034a:	4770      	bx	lr
